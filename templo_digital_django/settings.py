"""
Django settings for templo_digital_django project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
import dj_database_url

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-f07olffi-9n4pxcq24g^fa3tv838w+9)^9$3ktbdmxov1)@-i=')

# SECURITY WARNING: don't run with debug turned on in production!
# Set DEBUG based on environment variable (defaults to False for production)
DEBUG = os.environ.get('DJANGO_DEBUG', 'False') == 'True'

#ALLOWED_HOSTS = ['.vercel.app', '127.0.0.1']
ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', '*').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django.contrib.humanize',  # Adicionado para formatar números

    'tailwind',
    'theme',  # Adicionado app do tema Tailwind

    # Meus Apps
    'core.apps.CoreConfig',
    'churches.apps.ChurchesConfig',
    'members.apps.MembersConfig',
    'finances.apps.FinancesConfig',
    'events.apps.EventsConfig',
    'school.apps.SchoolConfig',
    'users.apps.UsersConfig',
    'dashboard.apps.DashboardConfig',
    'reports.apps.ReportsConfig', 
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # Add whitenoise middleware after SecurityMiddleware
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'templo_digital_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'templo_digital_django.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASE_URL = os.environ.get('DATABASE_URL')
DB_HOST = os.environ.get('DB_HOST')

# VERIFICA SE DATABASE_URL É NULO
print(" DEBUG: ", DEBUG)
print(" DATABASE_URL: ", DATABASE_URL)
print(" DB_HOST: ", DB_HOST)
if DATABASE_URL:
    print(" AAAAAAAAAA Using DATABASE_URL for database configuration.")
    # Production/Staging (e.g., Vercel): Use PostgreSQL via DATABASE_URL
    # dj_database_url will parse the URL and handle special characters
    DATABASES = {
        'default': dj_database_url.config(default=DATABASE_URL, conn_max_age=600, ssl_require=False) # Set ssl_require based on Supabase needs
    }
    # Ensure Supabase Pooler compatibility if needed (optional)
    # DATABASES['default']['OPTIONS'] = {'options': '-c statement_timeout=15000'}
elif DB_HOST:
    print(" BBBBBBBBBBBBB Using individual environment variables for database configuration.")
    # Local testing against Supabase/PostgreSQL using individual env vars
    # This avoids issues with shell expansion of special characters in DATABASE_URL
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get('DB_NAME', 'postgres'),
            'USER': os.environ.get('DB_USER'),
            'PASSWORD': os.environ.get('DB_PASSWORD'),
            'HOST': os.environ.get('DB_HOST'),
            'PORT': os.environ.get('DB_PORT', '5432'),
        }
    }
else:
    print(" CCCCCCCCCCC Using SQLite for database configuration.")
    # Development: Use SQLite
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Boa_Vista'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'theme/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'theme/static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

FAVICON = 'favicon.png'

# Media files (Uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Tailwind CSS
TAILWIND_APP_NAME = 'theme'

# Configuração de autenticação personalizada
AUTH_USER_MODEL = 'users.CustomUser'

# Configurações de login e redirecionamento
LOGIN_URL = 'users:login'
LOGIN_REDIRECT_URL = 'dashboard:index'
LOGOUT_REDIRECT_URL = 'users:login'
